{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx","theme.ts"],"names":["alignMap","left","center","right","valignMap","top","bottom","PreserveRatio","valign","innerRef","useRef","outerRef","useState","width","height","scale","useMemo","dynamicScale","Math","outerRect","innerRect","maxScale","Number","maxHeight","maxWidth","applyResize","entries","entry","setInnerRect","setOuterRect","useEffect","observer","ResizeObserver","Array","window","justifyContent","align","alignItems","ref","style","border","display","margin","overflow","padding","transform","transformOrigin","children","PropTypes","safeMode","ResizableContainer","resize","App","alignment","setAlignment","contentResizeRect","setContentResizeRect","size","href","status","fontSize","backgroundColor","mt","mb","my","w","onClick","mr","min","max","value","onChange","v","parseInt","transition","toString","textAlign","split","ReactDOM","render","theme","extendTheme","components","Alert","baseStyle","container","maxW","Button","Heading","sizes","lg","List","Table","table","td","Text","document","getElementById"],"mappings":"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","file":"static/js/main.7ee0d0e0.chunk.js","sourcesContent":["import React, {useEffect, useMemo, useRef, useState} from 'react';\nimport * as PropTypes from 'prop-types';\n\ninterface Rect {\n  height: number;\n  width: number;\n}\n\nconst alignMap = {\n  left: 'flex-start',\n  center: 'space-around',\n  right: 'flex-end',\n}\n\nconst valignMap = {\n  top: 'flex-start',\n  center: 'center',\n  bottom: 'flex-end',\n}\nexport function PreserveRatio({\n  align,\n  children,\n  maxHeight,\n  maxScale,\n  maxWidth,\n  safeMode,\n  valign,\n}: PropTypes.InferProps<typeof PreserveRatio.propTypes>) {\n  const innerRef = useRef(null);\n  const outerRef = useRef(null);\n\n  const [innerRect, setInnerRect] = useState<Rect>({width: 0, height: 0});\n  const [outerRect, setOuterRect] = useState<Rect>({width: 0, height: 0});\n\n  const scale = useMemo(() => {\n    let dynamicScale = Math.min(\n      outerRect.width / innerRect.width,\n      outerRect.height / innerRect.height\n    );\n\n    return Math.min(\n      dynamicScale,\n      maxScale || Number.MAX_VALUE,\n      (maxHeight || Number.MAX_VALUE) / innerRect.height,\n      (maxWidth || Number.MAX_VALUE)/ innerRect.width\n    );\n  }, [innerRect, maxScale, maxHeight, maxWidth, outerRect]);\n\n  const applyResize = (entries: any) => entries.forEach((entry: any) => {\n    switch (entry.target) {\n      case innerRef.current:\n        setInnerRect(entry.contentRect);\n        break;\n      case outerRef.current:\n        setOuterRect(entry.contentRect);\n        break;\n    }\n  });\n\n  useEffect(() => {\n    const observer = new ResizeObserver((entries: any) => {\n      if (!Array.isArray(entries)) {\n        return;\n      }\n\n      if (safeMode) {\n        window.requestAnimationFrame(() => {\n          applyResize(entries);\n        });\n      } else {\n        applyResize(entries);\n      }\n    });\n\n    observer.observe(innerRef.current!);\n    observer.observe(outerRef.current!);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [safeMode]);\n\n  const justifyContent = alignMap[align || ''] || 'space-around';\n  const alignItems = valignMap[valign || ''] || 'center';\n\n  return (\n    <div\n      ref={outerRef}\n      style={{\n        height: '100%',\n        width: '100%',\n        alignItems,\n        border: 'none',\n        display: 'flex',\n        justifyContent,\n        margin: 0,\n        overflow: 'hidden',\n        padding: 0,\n      }}\n    >\n      <div\n        ref={innerRef}\n        style={{\n          transform: `scale(${scale})`,\n          transformOrigin: `${valign || 'center'} ${align || 'center'}`,\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n\nPreserveRatio.propTypes = {\n  align: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  maxHeight: PropTypes.number,\n  maxScale: PropTypes.number,\n  maxWidth: PropTypes.number,\n  safeMode: PropTypes.bool,\n  valign: PropTypes.string,\n};\n","import React, { useState } from 'react'\nimport * as PropTypes from 'prop-types'\n\nimport { PreserveRatio } from 'react-preserve-ratio'\nimport {\n  Alert,\n  AlertIcon,\n  Button,\n  Code,\n  Flex,\n  Heading,\n  Link,\n  ListItem,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  Radio,\n  RadioGroup,\n  Spacer,\n  Table,\n  Tbody,\n  Td,\n  Text,\n  Thead,\n  Tr,\n  UnorderedList\n} from '@chakra-ui/react'\n\ninterface Rect {\n  height: number\n  width: number\n}\n\nfunction ResizableContainer({\n  children\n}: PropTypes.InferProps<typeof ResizableContainer.propTypes>) {\n  return (\n    <div\n      style={{\n        border: '1px dotted rgba(0, 0, 0, 0.2)',\n        display: 'block',\n        height: '240px',\n        overflow: 'hidden',\n        resize: 'both',\n        width: '640px'\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n\nResizableContainer.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nconst App = () => {\n  const [alignment, setAlignment] = useState('center center')\n  const [contentResizeRect, setContentResizeRect] = useState<Rect>({\n    width: 320,\n    height: 240\n  })\n\n  return (\n    <div\n      style={{\n        margin: '1em'\n      }}\n    >\n      <Heading size='xl'>Examples: <Link href=\"https://github.com/dobs/react-preserve-ratio\">react-preserve-ratio</Link></Heading>\n      <Alert status=\"warning\"><AlertIcon />The component works on mobile but these examples currently don't. Stay tuned. :)</Alert>\n      <Heading size='lg'>Basic Example</Heading>\n      <Text fontSize='md'>\n        Try resizing the box below and notice how content automatically scales\n        while maintaining its ratio.\n      </Text>\n      <ResizableContainer>\n        <PreserveRatio>\n          <div\n            style={{\n              alignItems: 'center',\n              backgroundColor: '#ffffdd',\n              display: 'flex',\n              height: '240px',\n              justifyContent: 'center',\n              width: '320px'\n            }}\n          >\n            Hello, world!\n          </div>\n        </PreserveRatio>\n      </ResizableContainer>\n\n      <Heading size='lg' mt={4} mb={3}>\n        Constraints Example\n      </Heading>\n      <Text>\n        This time the <Code>maxScale</Code> option is set to <Code>2</Code>,\n        limiting content to 2x its initial scale.\n      </Text>\n      <ResizableContainer>\n        <PreserveRatio maxScale={2}>\n          <div\n            style={{\n              alignItems: 'center',\n              backgroundColor: '#ffffdd',\n              display: 'flex',\n              height: '240px',\n              justifyContent: 'center',\n              width: '320px'\n            }}\n          >\n            Hello, world!\n          </div>\n        </PreserveRatio>\n      </ResizableContainer>\n      <Text>There are a few different constraint options:</Text>\n      <UnorderedList>\n        <ListItem>\n          <Code>maxScale</Code>: A number indicating the maximum scale for\n          content relative to their real size.\n        </ListItem>\n        <ListItem>\n          <Code>maxHeight</Code>: A number indicating the maximum height of\n          content, in pixels.\n        </ListItem>\n        <ListItem>\n          <Code>maxWidth</Code>: A number indicating the maximum width of\n          content, in pixels.\n        </ListItem>\n      </UnorderedList>\n      <Text>\n        Minimum constraints are more container-dependent an so aren't currently\n        covered by the component in favour of letting users specify their own{' '}\n        <Code>min-width</Code> and <Code>min-height</Code> on the container.\n      </Text>\n\n      <Heading size='lg' mt={4} mb={3}>\n        Content Resizing Example\n      </Heading>\n      <Text>\n        Content is also automatically scaled when content dimensions change.\n      </Text>\n      <Flex my={2} w='640px'>\n        <Button\n          onClick={() => setContentResizeRect({ width: 320, height: 240 })}\n        >\n          Default\n        </Button>\n        <Button\n          onClick={() => setContentResizeRect({ width: 480, height: 240 })}\n        >\n          Wide\n        </Button>\n        <Button\n          onClick={() => setContentResizeRect({ width: 240, height: 320 })}\n        >\n          Tall\n        </Button>\n        <Spacer />\n        <NumberInput\n          w={20}\n          mr={2}\n          min={1}\n          max={999}\n          value={contentResizeRect.width}\n          onChange={(v) =>\n            setContentResizeRect({\n              width: parseInt(v),\n              height: contentResizeRect.height\n            })\n          }\n        >\n          <NumberInputField />\n          <NumberInputStepper>\n            <NumberIncrementStepper />\n            <NumberDecrementStepper />\n          </NumberInputStepper>\n        </NumberInput>\n        <NumberInput\n          w={20}\n          min={1}\n          max={999}\n          value={contentResizeRect.height}\n          onChange={(v) =>\n            setContentResizeRect({\n              width: contentResizeRect.width,\n              height: parseInt(v)\n            })\n          }\n        >\n          <NumberInputField />\n          <NumberInputStepper>\n            <NumberIncrementStepper />\n            <NumberDecrementStepper />\n          </NumberInputStepper>\n        </NumberInput>\n      </Flex>\n      <ResizableContainer>\n        <PreserveRatio>\n          <div\n            style={{\n              alignItems: 'center',\n              backgroundColor: '#ffffdd',\n              display: 'flex',\n              height: `${contentResizeRect.height}px`,\n              justifyContent: 'center',\n              transition: 'width 200ms, height 200ms',\n              width: `${contentResizeRect.width}px`\n            }}\n          >\n            Hello, world!\n          </div>\n        </PreserveRatio>\n      </ResizableContainer>\n\n      <Heading size='lg' mt={4} mb={3}>\n        Alignment Example\n      </Heading>\n      <Text>\n        Components also support horizontal and vertical alignment via{' '}\n        <Code>align</Code> and <Code>valign</Code> respectively.\n      </Text>\n\n      <RadioGroup\n        my={2}\n        onChange={(v) => setAlignment(v.toString())}\n        value={alignment}\n      >\n        <Table w='320px'>\n          <Thead>\n            <Td></Td>\n            <Td>Left</Td>\n            <Td>Center</Td>\n            <Td>Right</Td>\n          </Thead>\n          <Tbody>\n            <Tr>\n              <Td textAlign='right'>Top</Td>\n              <Td>\n                <Radio value='top left' />\n              </Td>\n              <Td>\n                <Radio value='top center' />\n              </Td>\n              <Td>\n                <Radio value='top right' />\n              </Td>\n            </Tr>\n          </Tbody>\n          <Tbody>\n            <Tr>\n              <Td textAlign='right'>Center</Td>\n              <Td>\n                <Radio value='center left' />\n              </Td>\n              <Td>\n                <Radio value='center center' />\n              </Td>\n              <Td>\n                <Radio value='center right' />\n              </Td>\n            </Tr>\n          </Tbody>\n          <Tbody>\n            <Tr>\n              <Td textAlign='right'>Bottom</Td>\n              <Td>\n                <Radio value='bottom left' />\n              </Td>\n              <Td>\n                <Radio value='bottom center' />\n              </Td>\n              <Td>\n                <Radio value='bottom right' />\n              </Td>\n            </Tr>\n          </Tbody>\n        </Table>\n      </RadioGroup>\n\n      <ResizableContainer>\n        <PreserveRatio\n          align={alignment.split(' ')[1]}\n          valign={alignment.split(' ')[0]}\n        >\n          <div\n            style={{\n              alignItems: 'center',\n              backgroundColor: '#ffffdd',\n              display: 'flex',\n              height: `240px`,\n              justifyContent: 'center',\n              transition: 'width 200ms, height 200ms',\n              width: `320px`\n            }}\n          >\n            Hello, world!\n          </div>\n        </PreserveRatio>\n      </ResizableContainer>\n\n      <Heading size='lg' mt={4} mb={3}>\n        Safe Mode Example\n      </Heading>\n      <Text>\n        If elements are resized too quickly it can result in non-user-impacting\n        errors. Where this could become a problem is if you're using a frontend\n        error tracking service it could create a lot of noise.\n      </Text>\n      <Text>\n        To help mitigate, there's a <Code>safeMode</Code> prop that introduces a\n        small amount of user-visible latency but in an attempt to reduce these\n        errors.\n      </Text>\n      <Text>\n        See{' '}\n        <Link href='https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded'>\n          this StackOverflow thread\n        </Link>{' '}\n        for more detail.\n      </Text>\n      <ResizableContainer>\n        <PreserveRatio safeMode>\n          <div\n            style={{\n              alignItems: 'center',\n              backgroundColor: '#ffffdd',\n              display: 'flex',\n              height: '240px',\n              justifyContent: 'center',\n              width: '320px'\n            }}\n          >\n            Hello, world!\n          </div>\n        </PreserveRatio>\n      </ResizableContainer>\n\n      <Heading size='lg' mt={4} mb={3}>\n        Window Scaling Example\n      </Heading>\n      <Text>\n        A typical use case is having content scale to fill the current window,\n        for example when displaying a slide as part of a slide show.\n      </Text>\n      <Text>\n        The box below should scale to match the window size. Try resizing your\n        window (or rotating your device) and see how the inner content scales to\n        fit.\n      </Text>\n      <div\n        style={{\n          border: '1px dotted rgba(0, 0, 0, 0.2)',\n          height: 'calc(100vh - 2em)',\n          width: '100%'\n        }}\n      >\n        <PreserveRatio>\n          <div\n            style={{\n              alignItems: 'center',\n              backgroundColor: '#ffffdd',\n              display: 'flex',\n              height: '240px',\n              justifyContent: 'center',\n              width: '320px'\n            }}\n          >\n            Hello, world!\n          </div>\n        </PreserveRatio>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react'\n\nimport theme from './theme'\nimport App from './App'\n\nReactDOM.render(\n  <ChakraProvider theme={extendTheme(theme)}>\n    <App />\n  </ChakraProvider>,\n  document.getElementById('root')\n)\n","export default {\n  components: {\n    Alert: {\n      baseStyle: {\n        container: {\n          my: 3,\n          maxW: '640px'\n        }\n      }\n    },\n    Button: {\n      baseStyle: {\n        mr: 2\n      }\n    },\n    Heading: {\n      sizes: {\n        lg: {\n          mt: 5,\n          mb: 3\n        }\n      }\n    },\n    List: {\n      baseStyle: {\n        maxW: '640px'\n      }\n    },\n    Table: {\n      baseStyle: {\n        table: {\n          maxW: '640px'\n        },\n        td: {\n          textAlign: 'center'\n        }\n      }\n    },\n    Text: {\n      baseStyle: {\n        my: 3,\n        maxW: '640px'\n      }\n    }\n  }\n}\n"],"sourceRoot":""}